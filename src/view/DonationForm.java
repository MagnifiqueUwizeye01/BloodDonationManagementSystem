/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.DonationDao;
import dao.DonorDao;
import model.Donation;
import model.User;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Magnifique
 */
public class DonationForm extends javax.swing.JFrame {
    private User currentUser;
    
    
    
    public DonationForm(User currentUser) {
    this.currentUser = currentUser;
    initComponents();
    
    loadDonors();
    initializeTable();
}

private void initializeTable() {
    String[] columns = {"ID", "Donor ID", "Date", "Volume (ml)", "Remarks"};
    DefaultTableModel model = new DefaultTableModel(columns, 0) {
        @Override public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    jTable1.setModel(model);
    refreshDonationsTable();
}

    /**
     * Creates new form DonationForm
     */
    public DonationForm() {
        initComponents();
    }
    
    
private void loadDonors() {
    try {
        donorComboBox.removeAllItems();
        List<String> donors = new DonorDao().getAllDonorsFormatted();
        if (donors.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please add donors first", "No Donors", JOptionPane.INFORMATION_MESSAGE);
        } else {
            donors.forEach(donorComboBox::addItem);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Failed to load donors: " + e.getMessage(), 
            "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        donorComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        volumeField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        remarksField = new javax.swing.JTextField();
        recordDonationBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        backToDashboardBtn = new javax.swing.JButton();
        deleteDonationBtn = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Donation Management");
        setBackground(new java.awt.Color(255, 240, 240));
        setResizable(false);
        setSize(new java.awt.Dimension(650, 600));

        jPanel1.setBackground(new java.awt.Color(255, 220, 221));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));

        jPanel2.setBackground(new java.awt.Color(220, 20, 60));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 0, 10, 0));
        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 50));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DONATION RECORDING");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Donor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(70, 70, 70));
        jLabel2.setText("Donor:");

        donorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        donorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donorComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(70, 70, 70));
        jLabel3.setText("Donation Date (YYYY-MM-DD):");

        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Volume (ml):");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Remarks:");

        remarksField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remarksFieldActionPerformed(evt);
            }
        });

        recordDonationBtn.setBackground(new java.awt.Color(40, 167, 69));
        recordDonationBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        recordDonationBtn.setForeground(new java.awt.Color(255, 255, 255));
        recordDonationBtn.setText("Record Donation");
        recordDonationBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        recordDonationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordDonationBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(359, 359, 359)
                                .addComponent(jLabel2))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(357, 357, 357)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(358, 358, 358)
                                .addComponent(jLabel3))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addComponent(donorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(volumeField, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(remarksField, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                                .addComponent(recordDonationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(donorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volumeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remarksField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(recordDonationBtn)))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Donations List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Donor ID", "Date", "Volume (ml)", "Remarks"
            }
        ));
        tableScrollPane.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        backToDashboardBtn.setBackground(new java.awt.Color(44, 62, 80));
        backToDashboardBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backToDashboardBtn.setForeground(new java.awt.Color(255, 255, 255));
        backToDashboardBtn.setText("← Back to Dashboard");
        backToDashboardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backToDashboardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToDashboardBtnActionPerformed(evt);
            }
        });

        deleteDonationBtn.setBackground(new java.awt.Color(220, 53, 69));
        deleteDonationBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteDonationBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteDonationBtn.setText("Delete Selected");
        deleteDonationBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteDonationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDonationBtnActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(43, 87, 154));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update Donation");
        btnUpdate.setBorder(new javax.swing.border.MatteBorder(null));
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(255, 255, 155));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearch.setText("Search Donation");
        btnSearch.setBorder(new javax.swing.border.MatteBorder(null));
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(backToDashboardBtn)
                .addGap(201, 201, 201)
                .addComponent(deleteDonationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addGap(50, 50, 50))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteDonationBtn)
                    .addComponent(backToDashboardBtn))
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(459, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1034, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 904, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void remarksFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remarksFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remarksFieldActionPerformed

    private void backToDashboardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToDashboardBtnActionPerformed
        new DashboardForm(currentUser).setVisible(true);
    this.dispose();
    }//GEN-LAST:event_backToDashboardBtnActionPerformed

    private void recordDonationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordDonationBtnActionPerformed
         // 1. Validate Donor Selection
    if (donorComboBox.getSelectedItem() == null) {
        showError("Validation Error", "Please select a donor");
        return;
    }

    // Validate Date (with actual date checking)
    try {
        String dateText = dateField.getText().trim();
        if (!dateText.matches("\\d{4}-\\d{2}-\\d{2}")) {
            showError("Invalid Date", "Please use YYYY-MM-DD format");
            return;
        }
        
        java.time.LocalDate.parse(dateText); // Validates actual date
        java.time.LocalDate donationDate = java.time.LocalDate.parse(dateText);
        if (donationDate.isAfter(java.time.LocalDate.now())) {
            showError("Invalid Date", "Date cannot be in the future");
            return;
        }
    } catch (java.time.format.DateTimeParseException e) {
        showError("Invalid Date", "Please enter a valid date (e.g., 2023-12-31)");
        return;
    }

    // 3. Validate Volume
    try {
        int volume = Integer.parseInt(volumeField.getText().trim());
        if (volume < 300 || volume > 500) {
            showError("Invalid Volume", "Must be between 300-500ml");
            return;
        }
    } catch (NumberFormatException e) {
        showError("Invalid Volume", "Volume must be a number between 300-500");
        return;
    }

    // 4. Sanitize Remarks
    String remarks = remarksField.getText().trim();
    if (remarks.length() > 255) {
        showError("Remarks Too Long", "Maximum 255 characters allowed for remarks");
        return;
    }

    // 5. Extract Donor ID
    int donorId;
    try {
        String donorInfo = (String) donorComboBox.getSelectedItem();
        donorId = Integer.parseInt(donorInfo.split("ID: ")[1].split(",")[0].trim());
    } catch (Exception e) {
        showError("System Error", "Could not parse donor information");
        return;
    }

    // 6. Save the donation
    try {
        Donation donation = new Donation(
            0, // ID will be generated by database
            donorId,
            dateField.getText().trim(),
            Integer.parseInt(volumeField.getText().trim()),
            remarks
        );

        int donationId = new DonationDao().saveDonation(donation);
        if (donationId > 0) {
            showSuccess("Success", "Donation recorded! ID: " + donationId);
            clearFields();
            refreshDonationsTable();
        } else {
            showError("Error", "Failed to save donation");
        }
    } catch (SQLException e) {
        showError("Database Error", "Failed to save donation: " + e.getMessage());
    } catch (Exception e) {
        showError("Error", "Unexpected error: " + e.getMessage());
    }
    }//GEN-LAST:event_recordDonationBtnActionPerformed

    private void deleteDonationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDonationBtnActionPerformed
        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        showError("No Selection", "Please select a donation to delete");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(this, 
        "Delete this donation record?", "Confirm", JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        int donationId = (int) jTable1.getValueAt(selectedRow, 0);
        try {
            if (new DonationDao().deleteDonation(donationId)) {
                refreshDonationsTable();
                showSuccess("Success", "Donation deleted");
            }
        } catch (SQLException e) {
            showError("Database Error", e.getMessage());
        }
    }
    }//GEN-LAST:event_deleteDonationBtnActionPerformed

    private void donorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donorComboBoxActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        showError("No Selection", "Please select a donation to update");
        return;
    }
    
    // Get selected donation data
    int donationId = (int) jTable1.getValueAt(selectedRow, 0);
    int donorId = (int) jTable1.getValueAt(selectedRow, 1);
    String date = (String) jTable1.getValueAt(selectedRow, 2);
    int volume = (int) jTable1.getValueAt(selectedRow, 3);
    String remarks = (String) jTable1.getValueAt(selectedRow, 4);
    
    // Create update panel
    JPanel updatePanel = new JPanel(new java.awt.GridLayout(0, 2, 5, 5));
    
    JTextField dateField = new JTextField(date);
    JTextField volumeField = new JTextField(String.valueOf(volume));
    JTextField remarksField = new JTextField(remarks);
    
    updatePanel.add(new JLabel("Date (YYYY-MM-DD):"));
    updatePanel.add(dateField);
    updatePanel.add(new JLabel("Volume (ml):"));
    updatePanel.add(volumeField);
    updatePanel.add(new JLabel("Remarks:"));
    updatePanel.add(remarksField);
    
    int result = JOptionPane.showConfirmDialog(
        this, 
        updatePanel, 
        "Update Donation ID: " + donationId, 
        JOptionPane.OK_CANCEL_OPTION, 
        JOptionPane.PLAIN_MESSAGE
    );
    
    if (result == JOptionPane.OK_OPTION) {
        // Validate inputs
        if (!dateField.getText().matches("\\d{4}-\\d{2}-\\d{2}")) {
            showError("Invalid Date", "Please use YYYY-MM-DD format");
            return;
        }
        
        try {
            int newVolume = Integer.parseInt(volumeField.getText());
            if (newVolume < 300 || newVolume > 500) {
                showError("Invalid Volume", "Must be between 300-500ml");
                return;
            }
            
            // Create updated donation
            Donation updatedDonation = new Donation(
                donationId,
                donorId,
                dateField.getText(),
                newVolume,
                remarksField.getText().trim()
            );
            
            // Update in database
            if (new DonationDao().updateDonation(updatedDonation)) {
                showSuccess("Success", "Donation updated successfully");
                refreshDonationsTable();
            } else {
                showError("Error", "Failed to update donation");
            }
        } catch (NumberFormatException e) {
            showError("Invalid Input", "Volume must be a number");
        }   catch (SQLException ex) {
                Logger.getLogger(DonationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // 1. Get and trim input
    String donorIdStr = JOptionPane.showInputDialog(
    this, 
    "Enter Donor ID to search:", 
    "Search Donations by Donor", 
    JOptionPane.PLAIN_MESSAGE
);

// First check for cancel or close
if (donorIdStr == null) {
    return; // user canceled, simply return
}

donorIdStr = donorIdStr.trim(); 

    
    // 3. Empty input shows all donations
    if (donorIdStr.isEmpty()) {
        refreshDonationsTable();
        return;
    }
    
    // 4. Validate ID format
    if (!donorIdStr.matches("\\d{1,6}")) {
        showError("Invalid ID", "Donor ID must be 1-6 digits");
        return;
    }
    
    try {
        // 5. Parse and validate ID range
        int donorId = Integer.parseInt(donorIdStr);
        if (donorId <= 0) {
            showError("Invalid ID", "Donor ID must be positive");
            return;
        }
        
        // 6. Check donor existence
        if (!new DonorDao().donorExists(donorId)) {
            showError("Not Found", "No donor found with ID: " + donorId);
            return;
        }
        
        // 7. Perform search
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear current table
        
        List<Donation> donations = new DonationDao().getDonationsByDonor(donorId);
        
        if (donations.isEmpty()) {
            showSuccess("No Results", "No donations found for Donor ID: " + donorId);
        } else {
            donations.forEach(d -> 
                model.addRow(new Object[]{
                    d.getDonationId(),
                    d.getDonorId(),
                    d.getDonationDate(),
                    d.getQuantity(),
                    d.getRemarks()
                })
            );
        }
        
    } catch (NumberFormatException e) {
        showError("System Error", "Invalid number format");
    } catch (SQLException e) {
        showError("Database Error", "Search failed: " + e.getMessage());
    }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    
    //HELPER METHODS
    private void refreshDonationsTable() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    try {
        new DonationDao().getAllDonations().forEach(d -> 
            model.addRow(new Object[]{
                d.getDonationId(),
                d.getDonorId(),
                d.getDonationDate(),
                d.getQuantity(),
                d.getRemarks()
            })
        );
    } catch (SQLException e) {
        showError("Database Error", "Failed to load donations: " + e.getMessage());
    }
}

private void clearFields() {
    dateField.setText("");
    volumeField.setText("");
    remarksField.setText("");
}

private void showError(String title, String message) {
    JOptionPane.showMessageDialog(this, message, title, JOptionPane.ERROR_MESSAGE);
}

private void showSuccess(String title, String message) {
    JOptionPane.showMessageDialog(this, message, title, JOptionPane.INFORMATION_MESSAGE);
}






    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonationForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToDashboardBtn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton deleteDonationBtn;
    private javax.swing.JComboBox<String> donorComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton recordDonationBtn;
    private javax.swing.JTextField remarksField;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JTextField volumeField;
    // End of variables declaration//GEN-END:variables
}
